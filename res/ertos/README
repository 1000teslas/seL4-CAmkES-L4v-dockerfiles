This directory is revision controlled in hg:/data/hg_root/tools/ertos-bin.

Any modifications should be committed there, and then can be easily propagated
to other machines.

There are two ways to use this repository of stuff and stay up-to-date:

 1. rsync from a specific machine. To do this, grab the file
    /opt/ertos/bin/rsync_ertos_tools_from onto your local machine and then run:

       $ rsync_ertos_tools_from paulaner

    This will create and/or update your local /opt/ertos directory.
    You may need to be root, or at least have access to /opt/ertos/ first:
       $ sudo mkdir /opt/ertos
       $ sudo chown $USER: /opt/ertos

  OR

 2. Checkout the repository yourself LOCALLY:
        DO NOT check it out in your NFS-mounted home directory.
        For your own sake, and the sake of shared disk space, make sure you
        check it out onto the local hard disk.

    Symlink /opt/ertos to the export/ subdirectory of the repository.
        ln -s /path/to/ertos-bin/export /opt/ertos

    To update, just run "hg update" in the repository.

USEFUL THINGS
=============

 - In your .bashrc or .zshrc, source /opt/ertos/bin/ertos_env.sh
   This will put the default toolchains, simulators and other useful tools into
   your $PATH.

 - Use the hg pre-commit hook for making life with sub-repositories managable:
   Add the following lines to your $HOME/.hgrc file, and ensure your path is
   set as above.

      [hooks]
      pre-commit.subrepo = hg_subrepo_commit_check.sh


ADDING STUFF
============

If you add files to this, please make it clear where it originated from and how
one might go about rebuilding it if need be.

The top-level of the repository itself contains sub-repositories for various
projects such as qemu under source/, and provides easy build scripts that
rebuild the binaries from within them.

If you find that a toolchain/simulator/etc needs to be updated, talk with the
group and see if everybody could safely move to the new one:

    In the best case, everybody can switch and the old toolchain can be
    deprecated and later removed - the PATH in ertos_env.sh should be updated
    to the new toolchain.

    In the worst-case, a few projects will need to keep using the old
    toolchain, in which case they can hard-code the full path of the old
    toolchain. Also make a note of WHO is still using the old toolchain in the
    relevant directory. Newer projects should use the default toolchain.

